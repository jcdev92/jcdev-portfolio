// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prodcution
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// development
// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

model User {
  id          String      @id @default(uuid())
  first_name  String      @map("firstName")
  last_name   String      @map("lastName")
  alias       String
  email       String      @unique
  phone       String
  birth_day   String      @map("birthDay")
  gender      String
  city        String
  country     String
  profile_img String
  job_title   String      @map("jobTitle")
  about_me    String      @map("aboutMe")
  slogan      String
  about_list  AboutList[]
  socials     Social[]
  skills      Skill[]
  projects    Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AboutList {
  id          String @id @default(uuid())
  title       String
  description String
  icon        String
  user_id     String @map("userId")
  user        User   @relation(fields: [user_id], references: [id])
}

model Social {
  id      String @id @default(uuid())
  label   String
  link    String
  user_id String
  user    User   @relation(fields: [user_id], references: [id])
}

model Skill {
  id             String         @id @default(uuid())
  label          String
  user_id        String
  user           User           @relation(fields: [user_id], references: [id])
  skill_projects ProjectSkill[]
}

model Project {
  id             String         @id @default(uuid())
  title          String
  description    String
  categories     String[]
  cover_image    String         @map("coverImage")
  link           String
  github         String
  user_id        String
  user           User           @relation(fields: [user_id], references: [id])
  project_skills ProjectSkill[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model ProjectSkill {
  id         String @id @default(uuid())
  project_id String @map("projectId")
  skill_id   String @map("skillId")

  project Project @relation(fields: [project_id], references: [id])
  skill   Skill   @relation(fields: [skill_id], references: [id])
}
